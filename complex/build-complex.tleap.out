-I: Adding /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/prep to search path.
-I: Adding /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/lib to search path.
-I: Adding /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/parm to search path.
-I: Adding /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/cmd to search path.
-f: Source build-complex.tleap.in.

Welcome to LEaP!
(no leaprc in search path)
Sourcing: ./build-complex.tleap.in
----- Source: ./CD-leaprc
----- Source of ./CD-leaprc done
Loading parameters: /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/parm/parm99.dat
Reading title:
PARM99 for DNA,RNA,AA, organic molecules, TIP3P wat. Polariz.& LP incl.02/04/99
Loading parameters: /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/parm/frcmod.ff99SB
Reading force field modification type file (frcmod)
Reading title:
Modification/update of parm99.dat (Hornak & Simmerling)
Loading parameters: ./CD-Glycam_04l.dat
Reading title:
GLYCAM PARAMETERS (FOR AMBER 8.0, RESP 0.010), COPYRIGHT CCRC 2004
Loading parameters: ./CD-q4md.frcmod
Reading force field modification type file (frcmod)
Reading title:
  For heterogeneous glycoconjugates
Verbosity level: 2
>> 
>> MGO = loadmol2 CD-MGO.mol2	### MGO (w/ all OHs but OH4) from a-OMe-D-Glucoside, tripos7.mol2
Loading Mol2 file: ./CD-MGO.mol2
Reading MOLECULE named MGO
>> set MGO name "MGO"
>> set MGO head MGO.1.C4
>> set MGO tail MGO.1.O1
>> set MGO.1 connect0 MGO.1.C4
>> set MGO.1 connect1 MGO.1.O1
>> set MGO.1 restype saccharide
>> set MGO.1 name "MGO"
>> set MGO.1.C1 type CG
>> set MGO.1.H1 type H2
>> set MGO.1.O1 type OS
>> set MGO.1.C2 type CG
>> set MGO.1.H2 type H1
>> set MGO.1.O2 type OH
>> set MGO.1.HO2 type HO
>> set MGO.1.C3 type CG
>> set MGO.1.H3 type H1
>> set MGO.1.O3 type OH
>> set MGO.1.HO3 type HO
>> set MGO.1.C4 type CG
>> set MGO.1.H4 type H1
>> set MGO.1.C5 type CG
>> set MGO.1.H5 type H1
>> set MGO.1.O5 type OS
>> set MGO.1.C6 type CG
>> set MGO.1.H61 type H1
>> set MGO.1.H62 type H1
>> set MGO.1.O6 type OH
>> set MGO.1.HO6 type HO
>> 
>> MGA = loadmol2 CD-MGA.mol2      ### MGA (w/ OH3 & OH6) from a-OMe-D-Glucoside, tripos4.mol2
Loading Mol2 file: ./CD-MGA.mol2
Reading MOLECULE named MGA
>> set MGA name "MGA"
>> set MGA head MGA.1.C4
>> set MGA tail MGA.1.O1
>> set MGA.1 connect0 MGA.1.C4
>> set MGA.1 connect1 MGA.1.O1
>> set MGA.1 restype saccharide
>> set MGA.1 name "MGA"
>> set MGA.1.C1 type CG
>> set MGA.1.H1 type H2
>> set MGA.1.O1 type OS
>> set MGA.1.C2 type CG
>> set MGA.1.H2 type H1
>> set MGA.1.C3 type CG
>> set MGA.1.H3 type H1
>> set MGA.1.O3 type OH
>> set MGA.1.HO3 type HO
>> set MGA.1.C4 type CG
>> set MGA.1.H4 type H1
>> set MGA.1.C5 type CG
>> set MGA.1.H5 type H1
>> set MGA.1.O5 type OS
>> set MGA.1.C6 type CG
>> set MGA.1.H61 type H1
>> set MGA.1.H62 type H1
>> set MGA.1.O6 type OH
>> set MGA.1.HO6 type HO
>> 
>> MGB = loadmol2 CD-MGB.mol2	### MGB (w/ OH2 & OH6) from a-OMe-D-Glucoside, tripos5.mol2
Loading Mol2 file: ./CD-MGB.mol2
Reading MOLECULE named MGB
>> set MGB name "MGB"
>> set MGB head MGB.1.C4
>> set MGB tail MGB.1.O1
>> set MGB.1 connect0 MGB.1.C4
>> set MGB.1 connect1 MGB.1.O1
>> set MGB.1 restype saccharide
>> set MGB.1 name "MGB"
>> set MGB.1.C1 type CG
>> set MGB.1.H1 type H2
>> set MGB.1.O1 type OS
>> set MGB.1.C2 type CG
>> set MGB.1.H2 type H1
>> set MGB.1.O2 type OH
>> set MGB.1.HO2 type HO
>> set MGB.1.C3 type CG
>> set MGB.1.H3 type H1
>> set MGB.1.C4 type CG
>> set MGB.1.H4 type H1
>> set MGB.1.C5 type CG
>> set MGB.1.H5 type H1
>> set MGB.1.O5 type OS
>> set MGB.1.C6 type CG
>> set MGB.1.H61 type H1
>> set MGB.1.H62 type H1
>> set MGB.1.O6 type OH
>> set MGB.1.HO6 type HO
>> 
>> MGC = loadmol2 CD-MGC.mol2      ### MGC (w/ OH2 & OH3) from a-OMe-D-Glucoside, tripos6.mol2
Loading Mol2 file: ./CD-MGC.mol2
Reading MOLECULE named MGC
>> set MGC name "MGC"
>> set MGC head MGC.1.C4
>> set MGC tail MGC.1.O1
>> set MGC.1 connect0 MGC.1.C4
>> set MGC.1 connect1 MGC.1.O1
>> set MGC.1 restype saccharide
>> set MGC.1 name "MGC"
>> set MGC.1.C1 type CG
>> set MGC.1.H1 type H2
>> set MGC.1.O1 type OS
>> set MGC.1.C2 type CG
>> set MGC.1.H2 type H1
>> set MGC.1.O2 type OH
>> set MGC.1.HO2 type HO
>> set MGC.1.C3 type CG
>> set MGC.1.H3 type H1
>> set MGC.1.O3 type OH
>> set MGC.1.HO3 type HO
>> set MGC.1.C4 type CG
>> set MGC.1.H4 type H1
>> set MGC.1.C5 type CG
>> set MGC.1.H5 type H1
>> set MGC.1.O5 type OS
>> set MGC.1.C6 type CG
>> set MGC.1.H61 type H1
>> set MGC.1.H62 type H1
>> 
>> loadamberparams CD-HIS.frcmod
Loading parameters: ./CD-HIS.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
>> HIS=loadmol2 CD-HIS.mol2
Loading Mol2 file: ./CD-HIS.mol2
Reading MOLECULE named HIS
>> set HIS name "HIS"
>> set HIS head HIS.1.N1
>> set HIS.1 connect0 HIS.1.N1
>> set HIS.1 restype undefined
>> set HIS.1 name "HIS"
>> 
>> loadamberparams CD-ASP.frcmod
Loading parameters: ./CD-ASP.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
>> ASP=loadmol2 CD-ASP.mol2
Loading Mol2 file: ./CD-ASP.mol2
Reading MOLECULE named ASP
>> set ASP name "ASP"
>> set ASP head ASP.1.N1
>> set ASP.1 connect0 ASP.1.N1
>> set ASP.1 restype undefined
>> set ASP.1 name "ASP"
>> 
>> OAc = loadmol2 CD-OAc.mol2	### tripos9.mol2
Loading Mol2 file: ./CD-OAc.mol2
Reading MOLECULE named OAc
>> set OAc name "OAc"
>> set OAc head OAc.1.OS
>> set OAc.1 connect0 OAc.1.OS
>> set OAc.1 restype undefined
>> set OAc.1 name "OAc"
>> set OAc.1.OS type OS
>> set OAc.1.C type C
>> set OAc.1.O type O
>> set OAc.1.CM type CG
>> set OAc.1.HM1 type HC
>> set OAc.1.HM2 type HC
>> set OAc.1.HM3 type HC
>> 
>> OBn = loadmol2 CD-OBn.mol2	### tripos10.mol2
Loading Mol2 file: ./CD-OBn.mol2
Reading MOLECULE named OBn
>> set OBn name "OBn"
>> set OBn head OBn.1.OS
>> set OBn.1 connect0 OBn.1.OS
>> set OBn.1 restype undefined
>> set OBn.1 name "OBn"
>> set OBn.1.OS type OS
>> set OBn.1.CM type CG
>> set OBn.1.HM1 type H1
>> set OBn.1.HM2 type H1
>> set OBn.1.C1 type CA
>> set OBn.1.C2 type CA
>> set OBn.1.H2 type HA
>> set OBn.1.C3 type CA
>> set OBn.1.H3 type HA
>> set OBn.1.C4 type CA
>> set OBn.1.H4 type HA
>> set OBn.1.C5 type CA
>> set OBn.1.H5 type HA
>> set OBn.1.C6 type CA
>> set OBn.1.H6 type HA
>> 
>> OBz = loadmol2 CD-OBz.mol2	### tripos11.mol2
Loading Mol2 file: ./CD-OBz.mol2
Reading MOLECULE named OBz
>> set OBz name "OBz"
>> set OBz name "OBz"
>> set OBz head OBz.1.OS
>> set OBz.1 connect0 OBz.1.OS
>> set OBz.1 restype undefined
>> set OBz.1 name "OBz"
>> set OBz.1.OS type OS
>> set OBz.1.C type C
>> set OBz.1.O type O
>> set OBz.1.C1 type CA
>> set OBz.1.C2 type CA
>> set OBz.1.H2 type HA
>> set OBz.1.C3 type CA
>> set OBz.1.H3 type HA
>> set OBz.1.C4 type CA
>> set OBz.1.H4 type HA
>> set OBz.1.C5 type CA
>> set OBz.1.H5 type HA
>> set OBz.1.C6 type CA
>> set OBz.1.H6 type HA
>> 
>> OMe = loadmol2 CD-OMe.mol2	### tripos12.mol2
Loading Mol2 file: ./CD-OMe.mol2
Reading MOLECULE named OMe
>> set OMe name "OMe"
>> set OMe head OMe.1.OS
>> set OMe.1 connect0 OMe.1.OS
>> set OMe.1 restype undefined
>> set OMe.1 name "OMe"
>> set OMe.1.OS type OS
>> set OMe.1.CM type CG
>> set OMe.1.HM1 type H1
>> set OMe.1.HM2 type H1
>> set OMe.1.HM3 type H1
>> 
>> SCC = loadmol2 CD-SCC.mol2	### tripos13.mol2
Loading Mol2 file: ./CD-SCC.mol2
Reading MOLECULE named SCC
>> set SCC name "SCC"
>> set SCC head SCC.1.N1
>> set SCC tail SCC.1.C4
>> set SCC.1 connect0 SCC.1.N1
>> set SCC.1 connect1 SCC.1.C4
>> set SCC.1 restype protein
>> set SCC.1 name "SCC"
>> set SCC.1.N1  type N
>> set SCC.1.H1  type H
>> set SCC.1.C1  type C
>> set SCC.1.O1  type O
>> set SCC.1.C2  type CT
>> set SCC.1.H21 type HC
>> set SCC.1.H22 type HC
>> set SCC.1.C3  type CT
>> set SCC.1.H31 type HC
>> set SCC.1.H32 type HC
>> set SCC.1.C4  type C
>> set SCC.1.O4  type O
>> 
>> 
>> loadoff solvents.lib
Loading library: /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/lib/solvents.lib
Loading: CHCL3BOX
Loading: DC4
Loading: FB3
Loading: FB3BOX
Loading: FB4
Loading: FB4BOX
Loading: MEOHBOX
Loading: NMABOX
Loading: OP3
Loading: OPC
Loading: OPC3BOX
Loading: OPCBOX
Loading: PL3
Loading: POL3BOX
Loading: QSPCFWBOX
Loading: SPC
Loading: SPCBOX
Loading: SPCFWBOX
Loading: SPF
Loading: SPG
Loading: T4E
Loading: TIP3PBOX
Loading: TIP3PFBOX
Loading: TIP4PBOX
Loading: TIP4PEWBOX
Loading: TIP5PBOX
Loading: TP3
Loading: TP4
Loading: TP5
Loading: TPF
>> # loadOff ions08.lib
>> HOH = TP3
>> WAT = TP3
> 
> source leaprc.gaff
----- Source: /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/cmd/leaprc.gaff
----- Source of /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/cmd/leaprc.gaff done
>> logFile leap.log
Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/dslochower/anaconda3/envs/paprika-tutorial/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
(UNKNOWN ATOM TYPE: op)
(UNKNOWN ATOM TYPE: oq)
(UNKNOWN ATOM TYPE: ni)
(UNKNOWN ATOM TYPE: nj)
(UNKNOWN ATOM TYPE: np)
(UNKNOWN ATOM TYPE: nq)
(UNKNOWN ATOM TYPE: nk)
(UNKNOWN ATOM TYPE: nl)
(UNKNOWN ATOM TYPE: nm)
(UNKNOWN ATOM TYPE: nn)
(UNKNOWN ATOM TYPE: sp)
(UNKNOWN ATOM TYPE: sq)
> 
> loadamberparams dummy.frcmod
Loading parameters: ./dummy.frcmod
Reading force field modification type file (frcmod)
Reading title:
Parameters for dummy atom with type Du
(UNKNOWN ATOM TYPE: Du)
> COC = loadmol2 coc.mol2
Loading Mol2 file: ./coc.mol2
Reading MOLECULE named COC
> DM1 = loadmol2 dm1.mol2
Loading Mol2 file: ./dm1.mol2
Reading MOLECULE named DM1
> DM2 = loadmol2 dm2.mol2
Loading Mol2 file: ./dm2.mol2
Reading MOLECULE named DM2
> DM3 = loadmol2 dm3.mol2
Loading Mol2 file: ./dm3.mol2
Reading MOLECULE named DM3
> complex = loadpdb aligned_with_dummy.pdb
Loading PDB file: ./aligned_with_dummy.pdb
Matching PDB residue names to LEaP variables.
  total atoms in file: 154
> 
> desc complex
UNIT name: default_name
Head atom: null
Tail atom: null
Contents: 
R<MGO 1>
R<MGO 2>
R<MGO 3>
R<MGO 4>
R<MGO 5>
R<MGO 6>
R<COC 7>
R<DM1 8>
R<DM2 9>
R<DM3 10>
> saveamberparm complex aligned_with_dummy.prmtop aligned_with_dummy.rst7
Checking Unit.
Building topology.
Building atom parameters.
Building bond parameters.
Building angle parameters.
Building proper torsion parameters.
Building improper torsion parameters.
 total 0 improper torsions applied
Building H-Bond parameters.
Incorporating Non-Bonded adjustments.
Not Marking per-residue atom chain types.
Marking per-residue atom chain types.
  (Residues lacking connect0/connect1 - 
   these don't have chain types marked:

	res	total affected

	COC	1
  )
 (no restraints)
> 
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.
